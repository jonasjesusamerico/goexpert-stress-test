// Code generated by mockery v2.43.0. DO NOT EDIT.

package mock

import (
	domain "github.com/jonasjesusamerico/goexpert-stress-test/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// Reporter is an autogenerated mock type for the Reporter type
type Reporter struct {
	mock.Mock
}

type Reporter_Expecter struct {
	mock *mock.Mock
}

func (_m *Reporter) EXPECT() *Reporter_Expecter {
	return &Reporter_Expecter{mock: &_m.Mock}
}

// Generate provides a mock function with given fields: result
func (_m *Reporter) Generate(result domain.Result) {
	_m.Called(result)
}

// Reporter_Generate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Generate'
type Reporter_Generate_Call struct {
	*mock.Call
}

// Generate is a helper method to define mock.On call
//   - result domain.Result
func (_e *Reporter_Expecter) Generate(result interface{}) *Reporter_Generate_Call {
	return &Reporter_Generate_Call{Call: _e.mock.On("Generate", result)}
}

func (_c *Reporter_Generate_Call) Run(run func(result domain.Result)) *Reporter_Generate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(domain.Result))
	})
	return _c
}

func (_c *Reporter_Generate_Call) Return() *Reporter_Generate_Call {
	_c.Call.Return()
	return _c
}

func (_c *Reporter_Generate_Call) RunAndReturn(run func(domain.Result)) *Reporter_Generate_Call {
	_c.Call.Return(run)
	return _c
}

// NewReporter creates a new instance of Reporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReporter(t interface {
	mock.TestingT
	Cleanup(func())
}) *Reporter {
	mock := &Reporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
